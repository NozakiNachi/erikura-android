apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

// MEMO: Google Fit API を使うために、OAuth IDの登録を行う
// 1. 以下のURLに移動し、アプリケーションを登録する
//    https://console.developers.google.com/flows/enableapi?apiid=fitness
// 2. OAuth クライアント IDを作成します
//    - アプリケーションの種類: android
//    - 名前: テスト用には適当な名前を設定
//    - フィンガープリント： 以下の手順で取得
//      * keytool -keystore ~/.android/debug.keystore -list -v
//      * SHA-1 の値をコピー
//    - パッケージ名: AndroidManifest.xml より

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "jp.co.recruit.erikura"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        // MEMO: http でアクセスするためには res/xml/network_security_config.html にドメインを追加してください
        buildConfigField("String", "SERVER_BASE_URL", '"' + properties.getProperty("server.base_url") + '"')
        // FIXME: geocoding 用のURL
        // FIMXE: google map のAPIキー設定
    }
    buildTypes {
        debug {
        }
        staging {
            buildConfigField("String", "SERVER_BASE_URL", "\"https://dev-app.erikura.net\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "SERVER_BASE_URL", "\"https://app.erikura.net\"")
        }
    }
    dataBinding {
        enabled = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // LiveData
    def lifecycle_version = "2.2.0-rc03"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Google Fit
    implementation 'com.google.android.gms:play-services-fitness:18.0.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'

    // Dagger
    def dagger_version = "2.25.3"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // ReactiveJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.16"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"

    // Retrofit
    def retrofit_version = "2.7.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // OkHTTP
    implementation "com.squareup.okhttp3:logging-interceptor:4.2.2"
}

androidExtensions {
    experimental = true
}
